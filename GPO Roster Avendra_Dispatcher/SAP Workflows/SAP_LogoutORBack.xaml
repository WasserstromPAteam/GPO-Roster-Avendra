<Activity mc:Ignorable="sap sap2010" x:Class="SAP_LogoutORBack" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:sc="clr-namespace:System.ComponentModel;assembly=System.ComponentModel.TypeConverter" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=System.Private.CoreLib" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_Operationtype" Type="InArgument(x:String)" />
  </x:Members>
  <VisualBasic.Settings>
    <x:Null />
  </VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>976,3162</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>SAP_LogoutORBack_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>GlobalVariablesNamespace</x:String>
      <x:String>GlobalConstantsNamespace</x:String>
      <x:String>UiPath.UIAutomationCore.Contracts</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>UiPath.UIAutomationNext.Enums</x:String>
      <x:String>System.ComponentModel</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>Microsoft.Win32.Primitives</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>NPOI</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.Collections</AssemblyReference>
      <AssemblyReference>System.ComponentModel</AssemblyReference>
      <AssemblyReference>System.ComponentModel.EventBasedAsync</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Primitives</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>System.Configuration.ConfigurationManager</AssemblyReference>
      <AssemblyReference>System.Console</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.Common</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Drawing.Common</AssemblyReference>
      <AssemblyReference>System.Drawing.Primitives</AssemblyReference>
      <AssemblyReference>System.Linq</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Net.Mail</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>System.Private.DataContractSerialization</AssemblyReference>
      <AssemblyReference>System.Private.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Private.Uri</AssemblyReference>
      <AssemblyReference>System.Reflection.DispatchProxy</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>System.Reflection.TypeExtensions</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Formatters</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Primitives</AssemblyReference>
      <AssemblyReference>System.Security.Permissions</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.ViewModels</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext</AssemblyReference>
      <AssemblyReference>UiPath.Workflow</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="SAP_LogoutORBack" sap:VirtualizedContainerService.HintSize="625,3097" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <Sequence DisplayName="Back from the screen" sap:VirtualizedContainerService.HintSize="563,2986" sap2010:WorkflowViewState.IdRef="Sequence_5">
      <Sequence.Variables>
        <Variable x:TypeArguments="x:Boolean" Name="bool_logutExist" />
      </Sequence.Variables>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <ui:StartProcess Arguments="{x:Null}" WorkingDirectory="{x:Null}" DisplayName="Back from the screen" FileName="SAP_Scripts\Back_from_Screen.vbs" sap:VirtualizedContainerService.HintSize="501,88" sap2010:WorkflowViewState.IdRef="StartProcess_1">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:StartProcess>
      <Sequence DisplayName="Script Fail checking" sap:VirtualizedContainerService.HintSize="501,1189" sap2010:WorkflowViewState.IdRef="Sequence_2">
        <Sequence.Variables>
          <Variable x:TypeArguments="x:Boolean" Name="bool_var_ScriptFail_Exists" />
        </Sequence.Variables>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <ui:TextExists FormattedText="{x:Null}" DisplayName="Text exists for Ok" sap:VirtualizedContainerService.HintSize="410,155" sap2010:WorkflowViewState.IdRef="TextExists_1" Occurrence="1" Result="[bool_var_ScriptFail_Exists]" Text="OK">
          <ui:TextExists.Target>
            <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="d967d8dd-a190-43c5-9eb8-c3c6664d4906" InformativeScreenshot="872cd2b672a6b27d0604b046bd76fd1c" Selector="&lt;wnd app='wscript.exe' omit:cls='#32770' title='Windows Script Host' /&gt;" TimeoutMS="5000">
              <ui:Target.WaitForReady>
                <InArgument x:TypeArguments="ui:WaitForReady" />
              </ui:Target.WaitForReady>
            </ui:Target>
          </ui:TextExists.Target>
        </ui:TextExists>
        <If Condition="[bool_var_ScriptFail_Exists]" sap:VirtualizedContainerService.HintSize="410,883" sap2010:WorkflowViewState.IdRef="If_1">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <If.Then>
            <Sequence sap:VirtualizedContainerService.HintSize="376,701" sap2010:WorkflowViewState.IdRef="Sequence_3">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:Activate DelayBefore="{x:Null}" DelayMS="{x:Null}" DisplayName="Activate Windows Script Host popup" sap:VirtualizedContainerService.HintSize="334,107" sap2010:WorkflowViewState.IdRef="Activate_1">
                <ui:Activate.Target>
                  <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="2f7be2ff-9ca6-46c4-851a-45a45cee87d6" InformativeScreenshot="a3e38454acf4c28fb0f707bb0a05afb6" Selector="&lt;wnd app='wscript.exe' omit:cls='#32770' title='Windows Script Host' /&gt;">
                    <ui:Target.TimeoutMS>
                      <InArgument x:TypeArguments="x:Int32" />
                    </ui:Target.TimeoutMS>
                    <ui:Target.WaitForReady>
                      <InArgument x:TypeArguments="ui:WaitForReady" />
                    </ui:Target.WaitForReady>
                  </ui:Target>
                </ui:Activate.Target>
              </ui:Activate>
              <ui:ClickText ContinueOnError="{x:Null}" DelayBefore="{x:Null}" DelayMS="{x:Null}" FormattedText="{x:Null}" SendWindowMessages="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click Text OK" sap:VirtualizedContainerService.HintSize="334,155" sap2010:WorkflowViewState.IdRef="ClickText_1" KeyModifiers="None" MouseButton="BTN_LEFT" Occurrence="1" Text="OK">
                <ui:ClickText.CursorPosition>
                  <ui:CursorPosition Position="Center">
                    <ui:CursorPosition.OffsetX>
                      <InArgument x:TypeArguments="x:Int32" />
                    </ui:CursorPosition.OffsetX>
                    <ui:CursorPosition.OffsetY>
                      <InArgument x:TypeArguments="x:Int32" />
                    </ui:CursorPosition.OffsetY>
                  </ui:CursorPosition>
                </ui:ClickText.CursorPosition>
                <ui:ClickText.Target>
                  <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="6114f85b-a459-45d3-b07b-f96cec6216b8" InformativeScreenshot="dd5eea87a1eca923f3a8586de367045d" Selector="&lt;wnd app='wscript.exe' omit:cls='#32770' title='Windows Script Host' /&gt;&lt;wnd ctrlid='2' title='OK' /&gt;">
                    <ui:Target.TimeoutMS>
                      <InArgument x:TypeArguments="x:Int32" />
                    </ui:Target.TimeoutMS>
                    <ui:Target.WaitForReady>
                      <InArgument x:TypeArguments="ui:WaitForReady" />
                    </ui:Target.WaitForReady>
                  </ui:Target>
                </ui:ClickText.Target>
              </ui:ClickText>
              <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,141" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="[UiPath.Core.Activities.LogLevel.Error]" Message="[&quot;SAP Script Failed and therefore bot stopped the process&quot;]" />
              <Throw Exception="[New SystemException(&quot;SAP Script Failed and therefore bot stopped the process&quot;)]" sap:VirtualizedContainerService.HintSize="334,90" sap2010:WorkflowViewState.IdRef="Throw_1" />
            </Sequence>
          </If.Then>
          <If.Else>
            <Sequence DisplayName="" sap:VirtualizedContainerService.HintSize="300,80" sap2010:WorkflowViewState.IdRef="Sequence_4">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </Sequence>
          </If.Else>
        </If>
      </Sequence>
      <ui:UiElementExists DisplayName="Element Exists 'Button  Yes'" Exists="[bool_logutExist]" sap:VirtualizedContainerService.HintSize="501,107" sap2010:WorkflowViewState.IdRef="UiElementExists_1">
        <ui:UiElementExists.Target>
          <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="09ed8b54-6ae2-47bf-b54b-1524b4feac96" InformativeScreenshot="0b6d3b36a34fa5bbd5efe9b983f724d2" Selector="&lt;wnd app='saplogon.exe' omit:cls='#32770' title='Log Off' idx='*' /&gt;&lt;sap id='usr/btnSPOP-OPTION1' /&gt;" TimeoutMS="4000" WaitForReady="COMPLETE" />
        </ui:UiElementExists.Target>
      </ui:UiElementExists>
      <ui:IfElseIf sap2010:Annotation.AnnotationText="if input argument is Logout then it will logout the SAP else it will stay on sap main page" DisplayName="Else If" sap:VirtualizedContainerService.HintSize="501,1371" sap2010:WorkflowViewState.IdRef="IfElseIf_1">
        <ui:IfElseIf.ConditionBlocks>
          <sc:BindingList x:TypeArguments="ui:IfElseIfBlock" AllowEdit="True" AllowNew="True" AllowRemove="True" RaiseListChangedEvents="True">
            <ui:IfElseIfBlock BlockType="If" Condition="[in_Operationtype.ToUpper.Contains(&quot;LOGOUT&quot;) AND bool_logutExist]">
              <ui:IfElseIfBlock.Then>
                <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="450,577" sap2010:WorkflowViewState.IdRef="Sequence_8">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:Click AlterIfDisabled="{x:Null}" DelayBefore="{x:Null}" SendWindowMessages="{x:Null}" SimulateClick="{x:Null}" sap2010:Annotation.AnnotationText="Logout click YES" ClickType="CLICK_SINGLE" DelayMS="2000" DisplayName="Click 'Button  Yes'" sap:VirtualizedContainerService.HintSize="388,138" sap2010:WorkflowViewState.IdRef="Click_1" KeyModifiers="None" MouseButton="BTN_LEFT">
                    <ui:Click.CursorPosition>
                      <ui:CursorPosition Position="Center">
                        <ui:CursorPosition.OffsetX>
                          <InArgument x:TypeArguments="x:Int32" />
                        </ui:CursorPosition.OffsetX>
                        <ui:CursorPosition.OffsetY>
                          <InArgument x:TypeArguments="x:Int32" />
                        </ui:CursorPosition.OffsetY>
                      </ui:CursorPosition>
                    </ui:Click.CursorPosition>
                    <ui:Click.Target>
                      <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="8198b8aa-b898-45dd-91d4-bc7cbe7247dd" InformativeScreenshot="0b6d3b36a34fa5bbd5efe9b983f724d2" Selector="&lt;wnd app='saplogon.exe' omit:cls='#32770' title='Log Off' idx='*' /&gt;&lt;sap id='usr/btnSPOP-OPTION1' /&gt;" WaitForReady="COMPLETE">
                        <ui:Target.TimeoutMS>
                          <InArgument x:TypeArguments="x:Int32" />
                        </ui:Target.TimeoutMS>
                      </ui:Target>
                    </ui:Click.Target>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ui:Click>
                  <ui:CloseWindow TimeoutMS="{x:Null}" UseWindow="{x:Null}" DisplayName="Close Window 'saplogon.exe SAP'" sap:VirtualizedContainerService.HintSize="388,107" sap2010:WorkflowViewState.IdRef="CloseWindow_1" InformativeScreenshot="4623963c30b0e1f007403fc7627adf1f" Selector="&lt;wnd app='saplogon.exe' cls='#32770' title='SAP Logon 750' /&gt;" WaitForReady="INTERACTIVE" />
                  <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="388,141" sap2010:WorkflowViewState.IdRef="LogMessage_2" Level="[UiPath.Core.Activities.LogLevel.Info]" Message="[&quot;SAP logout Success&quot;]" />
                </Sequence>
              </ui:IfElseIfBlock.Then>
            </ui:IfElseIfBlock>
            <ui:IfElseIfBlock BlockType="ElseIf" Condition="[(NOT in_Operationtype.ToUpper.Contains(&quot;LOGOUT&quot;)) AND (bool_logutExist)]">
              <ui:IfElseIfBlock.Then>
                <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="450,430" sap2010:WorkflowViewState.IdRef="Sequence_9">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:Click AlterIfDisabled="{x:Null}" DelayBefore="{x:Null}" SendWindowMessages="{x:Null}" SimulateClick="{x:Null}" sap2010:Annotation.AnnotationText="Logout click NO" ClickType="CLICK_SINGLE" DelayMS="2000" DisplayName="Click 'Button  No'" sap:VirtualizedContainerService.HintSize="388,138" sap2010:WorkflowViewState.IdRef="Click_2" KeyModifiers="None" MouseButton="BTN_LEFT">
                    <ui:Click.CursorPosition>
                      <ui:CursorPosition Position="Center">
                        <ui:CursorPosition.OffsetX>
                          <InArgument x:TypeArguments="x:Int32" />
                        </ui:CursorPosition.OffsetX>
                        <ui:CursorPosition.OffsetY>
                          <InArgument x:TypeArguments="x:Int32" />
                        </ui:CursorPosition.OffsetY>
                      </ui:CursorPosition>
                    </ui:Click.CursorPosition>
                    <ui:Click.Target>
                      <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="3b09653d-96ef-4a53-a6db-048663b78e43" InformativeScreenshot="c052907b0ee8dc0bee9858b07c00fef9" Selector="&lt;wnd app='saplogon.exe' omit:cls='#32770' title='Log Off' idx='*' /&gt;&lt;sap id='usr/btnSPOP-OPTION2' /&gt;" WaitForReady="COMPLETE">
                        <ui:Target.TimeoutMS>
                          <InArgument x:TypeArguments="x:Int32" />
                        </ui:Target.TimeoutMS>
                      </ui:Target>
                    </ui:Click.Target>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ui:Click>
                  <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="388,141" sap2010:WorkflowViewState.IdRef="LogMessage_3" Level="[UiPath.Core.Activities.LogLevel.Info]" Message="[&quot;SAP Back to main screen success&quot;]" />
                </Sequence>
              </ui:IfElseIfBlock.Then>
            </ui:IfElseIfBlock>
          </sc:BindingList>
        </ui:IfElseIf.ConditionBlocks>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:IfElseIf>
    </Sequence>
  </Sequence>
</Activity>